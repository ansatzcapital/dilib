name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

permissions:
  contents: read

jobs:
  # Test and lint
  test:
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        # https://help.github.com/articles/virtual-environments-for-github-actions
        platform:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', 'pypy-3.8']

    steps:
      - uses: actions/checkout@v3
        if: ${{ ! startsWith(matrix.python-version, 'pypy-') }}
      - uses: actions/checkout@v1
        if: ${{ startsWith(matrix.python-version, 'pypy-') }}
        # Using actions/checkout@v2 or later with pypy causes an error
        # (see https://foss.heptapod.net/pypy/pypy/-/issues/3640)
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade setuptools pip wheel
          python -m pip install tox-gh-actions
      - name: Test with tox
        run: tox
# TODO: Enable coverage
#    - name: Upload coverage.xml
#      if: ${{ matrix.platform == 'ubuntu-latest' && matrix.python-version == '3.8' }}
#      uses: actions/upload-artifact@v3
#      with:
#        name: tox-gh-actions-coverage
#        path: coverage.xml
#        if-no-files-found: error
#    - name: Upload coverage.xml to codecov
#      if: ${{ matrix.platform == 'ubuntu-latest' && matrix.python-version == '3.8' }}
#      uses: codecov/codecov-action@v2

  # Build and publish
  # See https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
  # and https://packaging.python.org/en/latest/tutorials/packaging-projects/
  publish:
    runs-on: ubuntu-latest

    needs: [test]

    strategy:
      matrix:
        python-version: ['3.8']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade build twine
    - name: Create packages
      run: python -m build
    - name: Run twine check
      run: twine check dist/*
    - name: Publish distribution ðŸ“¦ to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
# TODO: Enable
#    - name: Publish distribution ðŸ“¦ to PyPI
#      if: startsWith(github.ref, 'refs/tags')
#      uses: pypa/gh-action-pypi-publish@release/v1
#      with:
#        password: ${{ secrets.PYPI_API_TOKEN }}
