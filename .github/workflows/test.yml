name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 5 * * *"

permissions:
  contents: read

jobs:
  # Run checks, unit tests, and integration tests.
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13", "3.14"]

    steps:
      - name: Clean inputs
        shell: bash
        run: |
          echo "CLEAN_PYTHON_VERSION=$(echo ${{ matrix.python-version }} | tr -d '.')" >> "${GITHUB_ENV}"

      - name: Check out code
        uses: actions/checkout@v4

      # See https://github.com/prefix-dev/setup-pixi.
      - name: Set up Pixi
        uses: prefix-dev/setup-pixi@v0.8.12
        with:
          pixi-version: v0.54.2
          environments: test-py${{ env.CLEAN_PYTHON_VERSION }}
          # We deliberately disable the cache and don't generate a lockfile
          # because we always want to use latest versions in CI.
          cache: false

      - name: Run checks and unit tests
        run: pixi run -e test-py${{ env.CLEAN_PYTHON_VERSION }} --frozen --locked just test

  # Test building.
  build-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          # See https://github.com/actions/checkout/issues/261.
          ref: ${{ github.event.pull_request.head.sha }}
          # Grab entire history for VCS-based version.
          fetch-depth: 0

      # See https://github.com/prefix-dev/setup-pixi.
      - name: Set up Pixi
        uses: prefix-dev/setup-pixi@v0.8.12
        with:
          pixi-version: v0.54.2
          environments: dev
          # We deliberately disable the cache and don't generate a lockfile
          # because we always want to use latest versions in CI.
          cache: false

      - name: Create packages
        run: pixi run -e dev --frozen --locked just build

  # Test generating docs.
  docs-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          # See https://github.com/actions/checkout/issues/261.
          ref: ${{ github.event.pull_request.head.sha }}
          # Grab entire history for VCS-based version.
          fetch-depth: 0

      # See https://github.com/prefix-dev/setup-pixi.
      - name: Set up Pixi
        uses: prefix-dev/setup-pixi@v0.8.12
        with:
          pixi-version: v0.54.2
          environments: dev
          # We deliberately disable the cache and don't generate a lockfile
          # because we always want to use latest versions in CI.
          cache: false

      - name: Generate latest docs
        run: pixi run -e dev --frozen --locked just gen-docs
