name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 5 * * *'

permissions:
  contents: read

jobs:
  # Run tests, linters, and checkers via nox
  test:
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        # See https://help.github.com/articles/virtual-environments-for-github-actions
        platform:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13', 'pypy-3.10']

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      # See https://docs.astral.sh/uv/guides/integration/github/#setting-up-python
      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          # We deliberately disable the cache and don't generate a `uv.lock` file
          # because we want to always test with the latest version of everything
          enable-cache: false
          # TODO: Remove once https://github.com/astral-sh/setup-uv/issues/226 is fixed
          prune-cache: false

      - name: Install dependencies
        run: uv pip install -e .[setup]

      - name: Test with nox
        run: nox -s print_env && nox

  # Test building and publishing
  # See:
  #  - https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
  #  - https://packaging.python.org/en/latest/tutorials/packaging-projects/
  #  - https://www.seanh.cc/2022/05/21/publishing-python-packages-from-github-actions/
  publish-test:
    runs-on: ubuntu-latest

    needs: [test]

    strategy:
      matrix:
        python-version: ['3.12']

    steps:
    - uses: actions/checkout@v4
      with:
        # See https://github.com/actions/checkout/issues/261
        ref: ${{ github.event.pull_request.head.sha }}
        # Grab entire history for setuptools_scm
        fetch-depth: 0

    # See https://docs.astral.sh/uv/guides/integration/github/#setting-up-python
    - name: Install uv and set the python version
      uses: astral-sh/setup-uv@v5
      with:
        python-version: '3.12'
        # We deliberately disable the cache and don't generate a `uv.lock` file
        # because we want to always test with the latest version of everything
        enable-cache: false
        # TODO: Remove once https://github.com/astral-sh/setup-uv/issues/226 is fixed
        prune-cache: false

    - name: Install dependencies
      run: uv pip install -e .[build,setup]

    - name: Create packages
      run: nox -s print_env && nox -s build
